coordinate 
x = 0 
y = 0



margature laser
x = 0 
z = 0



(base) PS C:\Users\Laser> cd 'C:\Users\Laser\Desktop\MUSP-RME HumansHUB'
(base) PS C:\Users\Laser\Desktop\MUSP-RME HumansHUB> python
Python 3.9.7 (default, Sep 16 2021, 16:59:28) [MSC v.1916 64 bit (AMD64)] :: Anaconda, Inc. on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> from serialJob2 import SJ2
>>> sj2 = SJ2(timeout=5000)
>>> sj2.connect('127.0.0.1', 5195)
(0, '')
>>> sj2.isConnected()
True
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getDynTextNumber()
(1, 'BUSY')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getDynTextNumber()
(1, 'BUSY')
>>> sj2.getDynTextNumber()
(1, 'BUSY')
>>> sj2.getDynTextNumber()
(1, 'BUSY')
>>> sj2.homing()
(0, '243')
>>> sj2.getFlyCadStatus()
(0, 'K54')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getDynTextNumber()
(1, 'BUSY')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.disconnect()
(0, '')
>>> sj2.connect('127.0.0.1', 5195)
(1, '[WinError 10038] Tentativo di operazione su un elemento diverso dal socket')
>>> sj2
<serialJob2.SJ2 object at 0x0000027FDD3AEFA0>
>>> sj2.connect('127.0.0.1', 5195)
(1, '[WinError 10038] Tentativo di operazione su un elemento diverso dal socket')
>>> sj2 = SJ2(timeout=5000)
>>> sj2.connect('127.0.0.1', 5195)
(0, '')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.moveHead(0, 0, absolute=True)
(1, '@')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.setRunMode()
(0, '175')
>>> sj2.getFlyCadStatus()
(0, 'K-1')
>>> sj2.getFlyCadStatus()
(0, 'K-1')
>>> sj2.getFlyCadStatus()
(0, 'K-1')
>>> sj2.getDynTextNumber()
(0, '#D0')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.getDynTextNumber()
(0, '#D0')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.moveHead(0, 0, absolute=True)
(0, '824')
>>> sj2.getFlyCadStatus()
(0, 'K53')
>>> sj2.getFlyCadStatus()
(0, 'K54')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.homing()
(1, '@')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.loadJobFile('C:\Users\Laser\Desktop\MUSP-RME HumansHUB\ARUCO_MARKER_HUMANS_MUSP.lmf')
  File "<stdin>", line 1
    sj2.loadJobFile('C:\Users\Laser\Desktop\MUSP-RME HumansHUB\ARUCO_MARKER_HUMANS_MUSP.lmf')
                                                                                            ^
SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape
>>> sj2.loadJobFile('C:\\Users\\Laser\\Desktop\\MUSP-RME HumansHUB\\ARUCO_MARKER_HUMANS_MUSP.lmf')
(1, 'BUSY')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.setRunMode()
(0, '175')
>>> sj2.getFlyCadStatus()
(0, 'K-1')
>>> sj2.getFlyCadStatus()
(0, 'K-1')
>>> sj2.getDynTextNumber()
(0, '#D0')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.loadJobFile('C:\\Users\\Laser\\Desktop\\MUSP-RME HumansHUB\\ARUCO_MARKER_HUMANS_MUSP.lmf')
(0, '6168')
>>> sj2.getFlyCadStatus()
(0, 'K-1')
>>> sj2.getFlyCadStatus()
(0, 'K-1')
>>> sj2.getDynTextNumber()
(0, '#D0')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.runPreview()
(0, '254')
>>> sj2.getFlyCadStatus()
(0, 'K5')
>>> sj2.halt()
(0, '237')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.reset()
(0, '254')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>> sj2.homing()
(1, '@')
>>> sj2.getFlyCadStatus()
(0, 'K1')
>>> sj2.setRunMode()
(0, '175')
>>> sj2.getFlyCadStatus()
(0, 'K-1')
>>> sj2.getDynTextNumber()
(0, '#D0')
>>> sj2.getFlyCadStatus()
(0, 'K2')
>>>